# Generated by Django 2.2.4 on 2019-10-06 02:07

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.TextField()),
                ('password', models.TextField()),
                ('email_address', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('account_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('access', models.TextField()),
            ],
            options={
                'db_table': 'account_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointment_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('room', models.TextField()),
                ('date', models.TextField()),
                ('symptom', models.TextField()),
                ('note', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'appointment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('clinic_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('name', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'clinic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClinicSchedule',
            fields=[
                ('clinic_schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('clinic_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('day', models.TextField()),
                ('first_start_hour', models.IntegerField()),
                ('first_start_minute', models.IntegerField()),
                ('first_end_hour', models.IntegerField()),
                ('first_end_minute', models.IntegerField()),
                ('second_start_hour', models.IntegerField()),
                ('second_start_minute', models.IntegerField()),
                ('second_end_hour', models.IntegerField()),
                ('second_end_minute', models.IntegerField()),
                ('third_start_hour', models.IntegerField()),
                ('third_start_minute', models.IntegerField()),
                ('third_end_hour', models.IntegerField()),
                ('third_end_minute', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'clinic_schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Consulation',
            fields=[
                ('consulation_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsulationAssessment',
            fields=[
                ('consulation_assessment_id', models.AutoField(primary_key=True, serialize=False)),
                ('consulation_id', models.IntegerField()),
                ('diagnosis', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation_assessment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsulationAssessmentRemark',
            fields=[
                ('consulation_assessment_remark_id', models.AutoField(primary_key=True, serialize=False)),
                ('consulation_id', models.IntegerField()),
                ('remark', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation_assessment_remark',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsulationObjective',
            fields=[
                ('consulation_objective_id', models.AutoField(primary_key=True, serialize=False)),
                ('consulation_id', models.IntegerField()),
                ('vitals_wt', models.TextField()),
                ('vitals_hr', models.TextField()),
                ('vitals_rr', models.TextField()),
                ('vitals_bmi', models.TextField()),
                ('vitals_ht', models.TextField()),
                ('vitals_bt', models.TextField()),
                ('vitals_spo2', models.TextField()),
                ('vitals_bp', models.TextField()),
                ('vision_r', models.TextField()),
                ('vision_l', models.TextField()),
                ('pupils', models.TextField()),
                ('glasses_lenses', models.TextField()),
                ('hearing', models.TextField()),
                ('physical_exam', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation_objective',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsulationObjectiveFile',
            fields=[
                ('consulation_objective_file_id', models.AutoField(primary_key=True, serialize=False)),
                ('consulation_objective_id', models.IntegerField()),
                ('file_path', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation_objective_file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsulationObjectiveImage',
            fields=[
                ('consulation_objective_image_id', models.AutoField(primary_key=True, serialize=False)),
                ('consulation_objective_id', models.IntegerField()),
                ('file_path', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation_objective_image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsulationObjectiveRemark',
            fields=[
                ('consulation_objective_remark_id', models.AutoField(primary_key=True, serialize=False)),
                ('consulation_objective_id', models.IntegerField()),
                ('remark', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation_objective_remark',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsulationPlan',
            fields=[
                ('consulation_plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('consulation_id', models.IntegerField()),
                ('plan', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation_plan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsulationPlanPrescription',
            fields=[
                ('consulation_plan_test_prescription_id', models.AutoField(primary_key=True, serialize=False)),
                ('consulation_id', models.IntegerField()),
                ('prescription_id', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation_plan_prescription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsulationPlanRemark',
            fields=[
                ('consulation_plan_remark_id', models.AutoField(primary_key=True, serialize=False)),
                ('consulation_id', models.IntegerField()),
                ('remark', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation_plan_remark',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsulationPlanTestRequest',
            fields=[
                ('consulation_plan_test_request_id', models.AutoField(primary_key=True, serialize=False)),
                ('consulation_id', models.IntegerField()),
                ('test_request', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation_plan_test_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsulationSubjective',
            fields=[
                ('consulation_subjective_id', models.AutoField(primary_key=True, serialize=False)),
                ('consulation_id', models.IntegerField()),
                ('chief_complaint', models.TextField()),
                ('history_present_illness', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'consulation_subjective',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('doctor_id', models.AutoField(primary_key=True, serialize=False)),
                ('lastname', models.TextField()),
                ('firstname', models.TextField()),
                ('middlename', models.TextField()),
                ('suffix', models.TextField()),
                ('prefix', models.TextField()),
                ('sex', models.TextField()),
                ('birthdate', models.TextField()),
                ('birthplace', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'doctor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('laboratory_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('type', models.TextField()),
                ('lab_name', models.TextField()),
                ('result_date', models.TextField()),
                ('remark', models.TextField()),
                ('allowed', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'laboratory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LaboratoryImage',
            fields=[
                ('laboratory_image_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('image_path', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'laboratory_image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalNote',
            fields=[
                ('medical_note_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('allowed', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'medical_note',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalNoteMedicalCertificate',
            fields=[
                ('medical_note_medical_certificate_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('hospital_no', models.TextField()),
                ('complete_address', models.TextField()),
                ('first_date', models.TextField()),
                ('second_date', models.TextField()),
                ('third_date', models.TextField()),
                ('complete_diagnosis', models.TextField()),
                ('remark', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'medical_note_medical_certificate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalNoteMedicalClearance',
            fields=[
                ('medical_note_medical_clearance_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('first_date', models.TextField()),
                ('second_date', models.TextField()),
                ('remark', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'medical_note_medical_clearance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalNoteText',
            fields=[
                ('medical_note_text_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('title', models.TextField()),
                ('date', models.TextField()),
                ('text', models.TextField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'medical_note_text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('medicine_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('generic_name', models.TextField()),
                ('dose', models.TextField()),
                ('form', models.TextField()),
                ('price', models.FloatField()),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'medicine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('patient_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('lastname', models.TextField()),
                ('firstname', models.TextField()),
                ('middlename', models.TextField()),
                ('suffix', models.TextField()),
                ('prefix', models.TextField()),
                ('sex', models.TextField()),
                ('birthdate', models.TextField()),
                ('birthplace', models.TextField()),
                ('blood_type', models.TextField()),
                ('id_no', models.TextField()),
                ('civil_status', models.TextField()),
                ('nationality', models.TextField()),
                ('religion', models.TextField()),
                ('contact_no', models.TextField()),
                ('tel_no', models.TextField()),
                ('home_address', models.TextField()),
                ('province', models.TextField()),
                ('occupation', models.TextField()),
                ('employer_name', models.TextField()),
                ('employer_no', models.TextField()),
                ('employer_address', models.TextField()),
                ('emergency_name', models.TextField()),
                ('emergency_address', models.TextField()),
                ('emergency_no', models.TextField()),
                ('emergency_relationship', models.TextField()),
                ('referring_physician', models.TextField()),
                ('primarycare_physician', models.TextField()),
                ('other_physician', models.TextField()),
                ('hmo', models.TextField(db_column='HMO')),
                ('hmo_card', models.TextField(db_column='HMO_card')),
                ('deleted', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'patient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('prescription_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('allowed', models.IntegerField()),
                ('deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'prescription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrescriptionChild',
            fields=[
                ('prescription_child_id', models.AutoField(primary_key=True, serialize=False)),
                ('prescription_id', models.IntegerField()),
                ('account_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('clinic_id', models.IntegerField()),
                ('generic_name', models.TextField()),
                ('brand_name', models.TextField()),
                ('dose', models.IntegerField()),
                ('form', models.TextField()),
                ('quantity', models.IntegerField()),
                ('frequency_sig', models.TextField()),
                ('duration', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('favorite', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'prescription_child',
                'managed': False,
            },
        ),
    ]
